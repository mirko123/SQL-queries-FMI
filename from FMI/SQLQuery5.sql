USE movies
SELECT MOVIEEXEC.NAME, MOVIE.TITLE
FROM MOVIE
JOIN MOVIEEXEC ON PRODUCERC# = CERT#
WHERE CERT# IN (SELECT PRODUCERC#
				FROM MOVIE
				WHERE TITLE = 'Star Wars');

SELECT NAME
FROM MOVIEEXEC, MOVIE
JOIN STARSIN ON STARSIN.STARNAME = 'Harrison Ford'
WHERE MOVIE.PRODUCERC# = MOVIEEXEC.CERT# AND MOVIE.TITLE = STARSIN.MOVIETITLE;

SELECT MOVIEEXEC.NAME
FROM MOVIEEXEC, MOVIE AS m1
JOIN STARSIN AS m2 ON m2.STARNAME = 'Harrison Ford'
WHERE MOVIEEXEC.CERT# = m1.PRODUCERC# AND m1.TITLE = m2.MOVIETITLE;  

SELECT DISTINCT MOVIE.STUDIONAME, STARSIN.STARNAME
FROM MOVIE JOIN STARSIN ON MOVIE.TITLE = STARSIN.MOVIETITLE
ORDER BY MOVIE.STUDIONAME;


SELECT DISTINCT STUDIO.NAME, STARSIN.STARNAME
FROM STUDIO, STARSIN, MOVIE
WHERE MOVIE.TITLE = STARSIN.MOVIETITLE 
			AND MOVIE.STUDIONAME = STUDIO.NAME
ORDER BY STUDIO.NAME ASC;

SELECT STARSIN.STARNAME, MOVIEEXEC.NETWORTH, STARSIN.MOVIETITLE
FROM MOVIE JOIN STARSIN ON STARSIN.MOVIETITLE = MOVIE.TITLE
	JOIN MOVIEEXEC ON MOVIEEXEC.CERT# = MOVIE.PRODUCERC# 
	AND MOVIEEXEC.NETWORTH >= ALL(SELECT NETWORTH
									FROM MOVIEEXEC);

SELECT DISTINCT MOVIESTAR.NAME
FROM MOVIESTAR 
JOIN STARSIN ON MOVIESTAR.NAME NOT IN (SELECT MOVIESTAR.NAME
														FROM MOVIESTAR);


USE pc

SELECT product.maker, product.model, product.type
FROM product
WHERE product.model NOT IN(SELECT printer.model
							FROM printer)
  AND product.model NOT IN(SELECT pc.model
							FROM pc)
  AND product.model NOT IN (SELECT laptop.model
							FROM laptop);

SELECT DISTINCT p1.maker
FROM product AS p1
JOIN printer ON p1.model = printer.model, product AS p2
JOIN laptop ON p2.model = laptop.model
WHERE p1.maker = p2.maker;

SELECT DISTINCT l1.hd
FROM laptop AS l1
JOIN laptop AS l2 ON l1.hd = l2.hd AND l1.model <> l2.model;

SELECT DISTINCT pc.model
FROM product AS prod
JOIN pc ON pc.model NOT IN(prod.model); 

SELECT DISTINCT pc.model
FROM product AS prod
JOIN pc ON pc.model NOT IN(SELECT p2.model
							FROM product AS p2); 
							

USE ships

SELECT NAME, SHIPS.CLASS, LAUNCHED, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT
FROM SHIPS
JOIN CLASSES ON CLASSES.CLASS = SHIPS.CLASS;

SELECT NAME, SHIPS.CLASS, LAUNCHED, TYPE, COUNTRY, NUMGUNS, BORE, DISPLACEMENT
FROM SHIPS
JOIN CLASSES ON CLASSES.CLASS = SHIPS.NAME;

SELECT COUNTRY, NAME
FROM CLASSES, SHIPS
WHERE CLASSES.CLASS = SHIPS.NAME AND SHIPS.NAME NOT IN (SELECT SHIP
														FROM OUTCOMES);
 
SELECT SHIPS.NAME AS 'Ship Name'
FROM SHIPS
JOIN CLASSES ON SHIPS.CLASS = CLASSES.CLASS AND NUMGUNS > 7 
WHERE LAUNCHED = 1916;

SELECT SHIPS.NAME, BATTLES.NAME, BATTLES.DATE
FROM SHIPS
JOIN OUTCOMES ON OUTCOMES.SHIP = SHIPS.NAME AND RESULT = 'sunk'
JOIN BATTLES ON BATTLES.NAME = OUTCOMES.BATTLE;

SELECT SHIPS.NAME, CLASSES.DISPLACEMENT, SHIPS.LAUNCHED
FROM CLASSES
JOIN SHIPS ON CLASSES.CLASS = SHIPS.CLASS AND SHIPS.CLASS = SHIPS.NAME;

SELECT *
FROM CLASSES
WHERE CLASSES.CLASS NOT IN(SELECT SHIPS.CLASS
							FROM SHIPS);

SELECT SHIPS.NAME, CLASSES.DISPLACEMENT, CLASSES.NUMGUNS, OUTCOMES.RESULT
FROM SHIPS
JOIN OUTCOMES ON OUTCOMES.BATTLE = 'North Atlantic' AND SHIPS.NAME = OUTCOMES.SHIP, CLASSES
WHERE SHIPS.CLASS = CLASSES.CLASS;